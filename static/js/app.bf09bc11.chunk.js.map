{"version":3,"sources":["App.js","assets/logowhite.png","api.js"],"names":["App","useState","coords","longitude","latitude","lastLocation","setLastLocation","location","setLocation","showSuccess","setShowSuccess","setErrorMsg","longitudeDelta","latitudeDelta","region","marker","setMarker","useEffect","a","async","getAllMarkers","mapRef","useRef","Location","status","animateRegion","current","animateToRegion","style","styles","container","onPress","json","long","lat","message","name","curMarkers","putLocation","then","res","push","sendLocation","animationType","transparent","visible","onRequestClose","alignItems","successModal","position","top","size","color","info","fontSize","backgroundColor","borderRadius","height","justifyContent","width","bottom","textStyle","map","ref","initialRegion","followsUserLocation","showsUserLocation","clusterColor","clusterTextColor","length","key","title","description","coordinate","tracksViewChanges","icon","require","id","windowWidth","Dimensions","get","windowHeight","StyleSheet","create","flex","flexDirection","zIndex","left","module","exports","api","axios","baseURL","timeout","GeoAPI","resp","data","console","error","put"],"mappings":"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","file":"static/js/app.bf09bc11.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Marker } from \"react-native-maps\";\nimport MapView from \"react-native-map-clustering\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  Image,\n  Pressable,\n  Modal,\n} from \"react-native\";\n\nimport { getAllMarkers, putLocation } from \"./api.js\";\n\nimport * as Location from \"expo-location\";\n\nexport default function App() {\n  const [lastLocation, setLastLocation] = useState({\n    coords: { longitude: 0, latitude: 0 },\n  });\n  const [location, setLocation] = useState(null);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [region, setRegion] = useState({\n    latitude: 40,\n    longitude: 9,\n    longitudeDelta: 5,\n    latitudeDelta: 5,\n  });\n\n  const [marker, setMarker] = useState([]);\n\n  useEffect(async () => {\n    setMarker(await getAllMarkers());\n  }, []);\n\n  const mapRef = useRef();\n\n  const animateToRegion = (animateRegion) => {\n    mapRef.current.animateToRegion(animateRegion, 2000);\n  };\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n      animateToRegion({\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421,\n      });\n    })();\n  }, []);\n\n  const sendLocation = async () => {\n    if (\n      location.coords.latitude != lastLocation.coords.latitude &&\n      location.coords.longitude != lastLocation.coords.longitude\n    ) {\n      const json = {\n        long: location.coords.longitude,\n        lat: location.coords.latitude,\n        message: \"Hey I'm here\",\n        name: \"Marcel\",\n      };\n      const curMarkers = marker;\n      putLocation(json).then((res) => {\n        curMarkers.push(res);\n        setMarker(curMarkers);\n        setShowSuccess(true);\n      });\n      setLastLocation(location);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Pressable\n        onPress={() => {\n          sendLocation();\n        }}\n        style={styles.sendLocation}\n      >\n        <Text>Teile deinen Standort</Text>\n      </Pressable>\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={showSuccess}\n        onRequestClose={() => {\n          setShowSuccess(!showSuccess);\n        }}\n        style={{ alignItems: \"center\" }}\n      >\n        <View style={styles.successModal}>\n          <Icon\n            name=\"checkmark-circle\"\n            style={{ position: \"absolute\", top: 10 }}\n            size={60}\n            color={\"green\"}\n          />\n          <View style={styles.info}>\n            <Text style={{ fontSize: 20 }}>\n              Dein Standort wurde gespeichert!\n            </Text>\n          </View>\n          <Pressable\n            style={{\n              backgroundColor: \"lightblue\",\n              borderRadius: 10,\n              height: 40,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              width: \"50%\",\n              position: \"absolute\",\n              bottom: 10,\n            }}\n            onPress={() => setShowSuccess(!showSuccess)}\n          >\n            <Text style={styles.textStyle}>Ok!</Text>\n          </Pressable>\n        </View>\n      </Modal>\n      <MapView\n        style={styles.map}\n        ref={mapRef}\n        initialRegion={region}\n        followsUserLocation\n        showsUserLocation\n        clusterColor={\"lightblue\"}\n        clusterTextColor={\"white\"}\n      >\n        {marker.length\n          ? marker.map((marker, key) => {\n              return (\n                <Marker\n                  title={marker.name}\n                  description={marker.message}\n                  coordinate={{\n                    latitude: marker.lat,\n                    longitude: marker.long,\n                  }}\n                  key={marker.id}\n                  tracksViewChanges={false}\n                  icon={require(\"./assets/logowhite.png\")}\n                />\n              );\n            })\n          : null}\n      </MapView>\n    </View>\n  );\n}\n\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  map: {\n    flex: 1,\n    width: \"100%\",\n  },\n  sendLocation: {\n    position: \"absolute\",\n    height: 50,\n    width: \"50%\",\n    backgroundColor: \"lightblue\",\n    zIndex: 10,\n    top: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 20,\n  },\n  successModal: {\n    backgroundColor: \"white\",\n    width: \"70%\",\n    height: 200,\n    position: \"absolute\",\n    left: windowWidth * 0.15,\n    top: windowHeight / 2 - 100,\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/logowhite.3a6a13df.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://os-beyond.at/htl/geo\",\r\n  //baseURL: 'http://127.0.0.1:5000/',\r\n  timeout: 10000,\r\n});\r\n\r\nconst GeoAPI = {\r\n  getAllMarkers: async () => {\r\n    try {\r\n      const resp = await api.get(\"/geoinfos\");\r\n      return resp.data;\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      console.error(err);\r\n    }\r\n  },\r\n  putLocation: async (location) => {\r\n    try {\r\n      const resp = await api.put(\"/geoinfo/0\", { info: location });\r\n      return resp.data;\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      console.error(err);\r\n    }\r\n  },\r\n};\r\n\r\nmodule.exports = GeoAPI;\r\n"],"sourceRoot":""}